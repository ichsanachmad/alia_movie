// Mocks generated by Mockito 5.0.10 from annotations
// in alia_movie/test/data/network/network_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:alia_movie/data/model/base/base.dart' as _i2;
import 'package:alia_movie/data/model/movie/movie.dart' as _i3;
import 'package:alia_movie/data/network/network_repository.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeBase<T> extends _i1.Fake implements _i2.Base<T> {}

class _FakeMovie extends _i1.Fake implements _i3.Movie {}

/// A class which mocks [NetworkRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkRepository extends _i1.Mock implements _i4.NetworkRepository {
  MockNetworkRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Base<List<_i3.Movie>>> getMovies(String? title, int? page) =>
      (super.noSuchMethod(Invocation.method(#getMovies, [title, page]),
              returnValue: Future<_i2.Base<List<_i3.Movie>>>.value(
                  _FakeBase<List<_i3.Movie>>()))
          as _i5.Future<_i2.Base<List<_i3.Movie>>>);
  @override
  _i5.Future<_i3.Movie> getMovieHeader() =>
      (super.noSuchMethod(Invocation.method(#getMovieHeader, []),
              returnValue: Future<_i3.Movie>.value(_FakeMovie()))
          as _i5.Future<_i3.Movie>);
}
